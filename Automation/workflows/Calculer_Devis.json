{"createdAt":"2025-06-30T14:57:44.097Z","updatedAt":"2025-09-29T23:26:00.087Z","id":"hFPa3X6amwb8rPjX","name":"Calculer_Devis","active":true,"isArchived":false,"nodes":[{"parameters":{"httpMethod":"POST","path":"fc9a0dba-704b-4391-9190-4db7a33a85b0","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-496,0],"id":"628f2a05-de7b-4b68-b0b7-7c89d521c9dc","name":"Webhook","webhookId":"fc9a0dba-704b-4391-9190-4db7a33a85b0"},{"parameters":{"promptType":"define","text":"=crée le devis stp\ndevis id : {{ $json.body.devis_id }}\nclient information : {{ $json.body.contact.toJsonString() }}\ndevis_articles : {{ $json.body.articles.toJsonString() }}\n\ndevis_summary: {{ $json.body.summary.toJsonString() }}\n\n\nPaiement immédiat: {{ $json.body.raw_data.Paiement_Immediat }}\n- Si \"Paiement immédiat\" est true, indique \"Paiement dû Le jour de l'intervention\".\n- Si \"Paiement immédiat\" est false, indique \"Paiement dû dans les 21 jours suivant la date de facturation\".\n\nle commentaire doit être créer a partir des items du devis, et doit reprendre les conditions de paiement fais une proposition sur un ton commerciale et amicale.\n\n","messages":{"messageValues":[{"message":"=You are a text-processing expert. Your task is to transform raw JSON data (exported from a CRM like Baserow) into a well-structured Python dictionary that will be used to fill a Jinja2 PDF template.\n\nThe goal is to generate a professional PDF quote for a client. The final output must be a single Python dict with the following structure:\n\n{\n  \"client_nom\": str,\n  \"client_adresse\": str,\n  \n  \"client_ville\": str,\n  \"client_email\": str,\n  \"client_telephone\": str,\n  \"estimate_numero\": str,\n  \"estimate_date\": str,\n  \"items\": [\n    {\n      \"date\": str,\n      \"description\": str,\n      \"taxes\": str,\n      \"quantite\": int,\n      \"prix_unitaire\": float,\n      \"total\": float\n    },\n    ...\n  ],\n  \"commentaire\": str,  \n  \"subtotal\": float,\n  \"gst\": float,\n  \"qst\": float,\n  \"total\": float\n} \n\n--- TASK ---\n\nStep 1. Carefully analyze the input data.\nStep 2. Extract the relevant information and format the values correctly.\nStep 3. Create a friendly and professionnal comment for the quote, it serve as introduction and summary.\nStep 4. Output only the final dictionary, nothing else IMPORTANT no prefixe like python''''''' or code '''''' etc .\n\nInput data (from CRM):\n\n[INSERT RAW JSON HERE]\n/no_think"}]},"batching":{}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.7,"position":[48,-256],"id":"dd352310-3e70-42a8-9c08-d548c4901dda","name":"Basic LLM Chain"},{"parameters":{"model":"qwen3:14b","options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOllama","typeVersion":1,"position":[208,-48],"id":"199c011f-b3b0-412f-a266-d677232a9600","name":"Ollama Chat Model","credentials":{"ollamaApi":{"id":"bz9FN0m0yZkYtj1C","name":"Ollama account"}}},{"parameters":{"model":"qwen/qwen3-32b","options":{"temperature":0.7}},"type":"@n8n/n8n-nodes-langchain.lmChatGroq","typeVersion":1,"position":[64,-48],"id":"b4c93606-93d0-4da6-92e0-a9faa30dedd1","name":"Groq Chat Model","credentials":{"groqApi":{"id":"HwEaU3wVnHbaSIU9","name":"Groq account"}}},{"parameters":{"jsCode":"// ===================================================================\n//  CODE NODE N°2 : HTML GENERATOR (PDF REPLICA)\n// ===================================================================\n\nconst previousNodeName = 'Clean and Parse LLM Response'; \nconst data = $(previousNodeName).item.json.structuredData;\nconst currentDate = $now.toFormat('dd-MM-yyyy');\nif (!data || !data.items || !Array.isArray(data.items)) {\n  throw new Error(\"Les données du noeud précédent sont invalides. 'structuredData.items' n'a pas été trouvé.\");\n}\n\n// Helper function to format currency\nconst formatCurrency = (num) => typeof num === 'number' ? num.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") : '0.00';\n\nconst itemRows = data.items.map(item => `\n    <tr>\n        <td>${item.description || ''}</td>\n        <td class=\"text-right\">${item.quantite || 0}</td>\n        <td class=\"text-right\">${formatCurrency(item.prix_unitaire)}</td>\n        <td class=\"text-right\">${formatCurrency(item.total)}</td>\n    </tr>\n`).join('');\n\nconst finalHtml = `\n<!DOCTYPE html>\n<html lang=\"fr\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Estimate ${data.estimate_numero || 'N/A'}</title>\n    <style>\n        /* CSS is now inlined for reliability */\n        body {\n            font-family: 'Helvetica Neue', Arial, sans-serif;\n            font-size: 10pt;\n            color: #333;\n            margin: 0;\n            padding: 20px;\n        }\n        .container {\n            max-width: 800px;\n            margin: auto;\n        }\n        .header, .estimate-details-container {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n        }\n        .company-info {\n            line-height: 1.2;\n        }\n        .company-name {\n            font-size: 18pt;\n            font-weight: bold;\n            margin-bottom: 5px;\n        }\n        .section-title {\n            color: #2E75B5;\n            font-size: 16pt;\n            font-weight: normal;\n            border-bottom: 1px solid #2E75B5;\n            padding-bottom: 5px;\n            margin-top: 10px;\n            margin-bottom: 5px;\n        }\n        .estimate-info, .address-info {\n            width: 50%;\n        }\n        .estimate-info div {\n            display: flex;\n            justify-content: space-between;\n        }\n        .address-info strong {\n            color: #777;\n            font-weight: bold;\n            display: block;\n            margin-bottom: 5px;\n        }\n        table {\n            width: 100%;\n            border-collapse: collapse;\n            margin-top: 20px;\n            font-size: 9pt;\n        }\n        th, td {\n            padding: 8px 10px;\n            text-align: left;\n            vertical-align: top;\n        }\n        thead th {\n            background-color: #4A8DC9;\n            color: white;\n            font-weight: bold;\n            border: 1px solid #4A8DC9;\n        }\n        tbody tr td {\n            border-bottom: 1px solid #ddd;\n        }\n        .summary-container {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n            margin-top: 5px;\n        }\n        .summary-notes {\n            width: 60%;\n            font-style: italic;\n            color: #555;\n        }\n        .summary-totals {\n            width: 35%;\n        }\n        .summary-totals table td {\n            border: none;\n            padding: 4px 0;\n        }\n        .summary-totals .total-amount {\n            font-size: 14pt;\n            font-weight: bold;\n            color: black;\n            border-top: 2px solid #333;\n            border-bottom: 3px double #333;\n            padding-top: 5px;\n            padding-bottom: 5px;\n        }\n        .tax-summary-container {\n            margin-top: 5px;\n        }\n        .tax-summary-container th {\n             background-color: #4A8DC9;\n             color: white;\n        }\n        .tax-summary-container td {\n            border: 1px solid #ddd;\n        }\n        .footer {\n            margin-top:10px;\n            font-size: 9pt;\n            color: #555;\n        }\n        .page-number {\n            text-align: center;\n            margin-top: 40px;\n            font-size: 8pt;\n            color: #888;\n        }\n        .text-right {\n            text-align: right;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <div class=\"header\">\n            <div>\n                <div class=\"company-name\">Excellence Executive Company</div>\n                <div class=\"company-info\">\n                    1016 Rue Melançon<br>\n                    Saint-Jérôme QC J7J6X7<br>\n                    +15142684393<br>\n                    info@ee-cie.ca<br>\n                    https://ee-cie.ca<br>\n                    GST/HST Registration No.: 742845506RT0001<br>\n                    QST Registration No.: 4012787052\n                </div>\n            </div>\n        </div>\n\n        <div class=\"section-title\">Estimate</div>\n\n        <div class=\"estimate-details-container\">\n            <div class=\"address-info\">\n                <strong>ADDRESS</strong>\n                ${data.client_nom || ''}<br>\n                ${data.client_adresse || ''}<br>\n                ${data.client_code_postal || ''}<br>\n                ${data.client_ville || ''}<br>\n                ${data.client_tel || ''}<br>\n                ${data.client_email || ''}<br>\n                \n            </div>\n            <div class=\"estimate-info\">\n                <div><span>ESTIMATE</span> <span>${data.estimate_numero || ''}</span></div>\n                <div><span>DATE</span> <span>${currentDate.toString() }</span></div>\n            </div>\n        </div>\n\n        <table>\n            <thead>\n                <tr>\n                    <th>DESCRIPTION</th>\n                    <th class=\"text-right\">QTY</th>\n                    <th class=\"text-right\">RATE</th>\n                    <th class=\"text-right\">AMOUNT</th>\n                </tr>\n            </thead>\n            <tbody>\n                ${itemRows}\n            </tbody>\n        </table>\n        \n        <div class=\"summary-container\">\n            <div class=\"summary-notes\">\n                <p>${data.commentaire || \"\"}</p>\n                \n                \n            </div>\n            <div class=\"summary-totals\">\n                <table>\n                    <tr>\n                        <td>SUBTOTAL</td>\n                        <td class=\"text-right\">${formatCurrency(data.subtotal)}</td>\n                    </tr>\n                    <tr>\n                        <td>GST @ 5%</td>\n                        <td class=\"text-right\">${formatCurrency(data.gst)}</td>\n                    </tr>\n                    <tr>\n                        <td>QST @ 9.975%</td>\n                        <td class=\"text-right\">${formatCurrency(data.qst)}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>TOTAL</strong></td>\n                        <td class=\"text-right total-amount\">$${formatCurrency(data.total)}</td>\n                    </tr>\n                </table>\n            </div>\n            \n        </div>\n        <div class=\"tax-summary-container\">\n            <div class=\"section-title\" style=\"font-size: 11pt; color: black; border: none; margin-bottom: 0;\">TAX SUMMARY</div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>RATE</th>\n                        <th class=\"text-right\">TAX</th>\n                        <th class=\"text-right\">NET</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>GST @ 5%</td>\n                        <td class=\"text-right\">${formatCurrency(data.gst)}</td>\n                        <td class=\"text-right\">${formatCurrency(data.subtotal)}</td>\n                    </tr>\n                    <tr>\n                        <td>QST @ 9.975%</td>\n                        <td class=\"text-right\">${formatCurrency(data.qst)}</td>\n                        <td class=\"text-right\">${formatCurrency(data.subtotal)}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        <div class=\"footer\">\n            <p>Accepted By</p>\n            <p>Accepted Date</p>\n        </div>\n    </div>\n</body>\n</html>\n`;\n\n// Return the final HTML to be used by the next node\nreturn {\n  html: finalHtml\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[624,-256],"id":"99748543-988b-44be-9990-7e61197aefd9","name":"Code1"},{"parameters":{"jsCode":"// Get the raw string output from the previous node\n// Replace 'llm_response_field' with the actual name of the field containing the text\nconst rawResponse = $('Basic LLM Chain').item.json.text;\n// This regular expression finds the <think> block and any whitespace after it\n// It's designed to be robust even if the think block has content or newlines\nconst regex = /<think>[\\s\\S]*?<\\/think>\\s*/;\n\n// Remove the matched <think> block from the string\nconst cleanedString = rawResponse.replace(regex, '');\n\n// Now that we have a clean JSON string, parse it into a JavaScript object\nconst jsonData = JSON.parse(cleanedString);\n\n// Return the parsed data in a new field called 'structuredData'\n// This makes it easy to reference in the next node\nreturn {\n  structuredData: jsonData\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[400,-256],"id":"86884f38-3abe-4c99-9318-3b29bf8244f3","name":"Clean and Parse LLM Response"},{"parameters":{"html":"{{ $json.html.replaceAll('\\n\\n','') }}"},"type":"n8n-nodes-base.html","typeVersion":1.2,"position":[848,-256],"id":"baff4e0e-14fc-44e7-8a7a-850b7c740038","name":"HTML"},{"parameters":{"operation":"toBinary","sourceProperty":"html","options":{"dataIsBase64":false,"fileName":"index.html","mimeType":"text/html"}},"id":"1b42d5da-5858-4569-8bc1-0ab95e23ccbc","name":"Convert to File3","type":"n8n-nodes-base.convertToFile","typeVersion":1,"position":[1024,-256]},{"parameters":{"method":"POST","url":"http://gotenberg:3000/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"data"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1232,-256],"id":"19758d81-973f-4a4f-8284-2bec7a58c7b0","name":"HTTP Request","retryOnFail":false,"waitBetweenTries":5000},{"parameters":{"jsCode":"// External modules required: axios, form-data\nconst FormData = require('form-data');\nconst axios = require('axios');\n\n// Get the first input item\nconst item = $input.all()[0];\nconst GCE_BASEROW_API_KEY=$env['GCE_BASEROW_API_KEY'];\n// --- CORRECTED SECTION ---\n// Get data from the Webhook node. \n// IMPORTANT: Replace \"Webhook\" with the exact name of your webhook node.\nconst webhookNodeItems = $items(\"Webhook\");\n\n// It's good practice to check if the node returned any data\nif (webhookNodeItems.length === 0) {\n  throw new Error('The \"Webhook\" node did not return any data. Please check its execution.');\n}\n\n// Get the devisid from the path you specified: .json.item.devisid\nconst devisId = $('Webhook').first().json.body.devis_id\n\n// Add a check to ensure devisid exists\nif (!devisId) {\n  throw new Error('The property \"devisid\" was not found at the expected path in the Webhook node output.');\n}\n// --- NEW: Format the current date using the built-in $now variable ---\nconst currentDate = $now.toFormat('dd-MM-yyyy');\n\n// --- NEW: Construct the dynamic filename ---\nconst dynamicFilename = `${devisId}_${currentDate}.pdf`;\n\n\n// Get the binary data from the 'data' property\n// This is the standard for nodes that output a single file\nconst pdfBinary = item.binary?.data;\n\nif (!pdfBinary) {\n  throw new Error('No binary data found in the \"data\" property of the input item.');\n}\n\n// Create a buffer from the Base64 encoded binary data from n8n\nconst pdfBuffer = Buffer.from(pdfBinary.data, 'base64');\n\nconst form = new FormData();\n// --- MODIFIED: Use the new dynamic filename in the form ---\nform.append('file', pdfBuffer, {\n  filename: dynamicFilename // This now uses your custom name\n});\n\n// Send the form using Axios\ntry {\n  const res = await axios.post('https://baserow.eecie.ca/api/user-files/upload-file/', form, {\n    headers: {\n      // IMPORTANT: This is not secure. Use n8n credentials instead (see Version 2).\n      Authorization: \"Token \"+ GCE_BASEROW_API_KEY,\n      ...form.getHeaders() // This adds the correct 'Content-Type: multipart/form-data' header\n    }\n  });\n\n  // Return the API response to the workflow\n  return [{ json: res.data }];\n} catch (error) {\n  // If the API call fails, throw an error to stop the workflow\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.error('Error Data:', error.response.data);\n    console.error('Error Status:', error.response.status);\n    console.error('Error Headers:', error.response.headers);\n    throw new Error(`Baserow API Error: ${error.response.status} - ${JSON.stringify(error.response.data)}`);\n  } else if (error.request) {\n    // The request was made but no response was received\n    throw new Error('Baserow API Error: No response received from the server.');\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    throw new Error('Error setting up the request: ' + error.message);\n  }\n}"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1424,-256],"id":"1f73dbb7-5ba3-4c99-a12d-9c787cc5cb3c","name":"Code"},{"parameters":{"operation":"update","databaseId":52,"tableId":704,"rowId":"={{ $('Webhook').item.json.body.devis_id }}","fieldsUi":{"fieldValues":[{"fieldId":6842,"fieldValue":"={{ $('Code').item.json.name }}"},{"fieldId":7381,"fieldValue":"={{ $('Webhook').item.json.body.raw_data.Nombre +1 }} "}]}},"type":"n8n-nodes-base.baserow","typeVersion":1,"position":[1648,-256],"id":"297aae19-4246-4e27-9771-20c20b9248a5","name":"update devis status and pdf","credentials":{"baserowApi":{"id":"SAkHE4LXFLDlBctH","name":"Baserow account"}}},{"parameters":{"operation":"update","databaseId":52,"tableId":703,"rowId":"={{ $('update devis status and pdf').item.json.Task_input[0].id }}","fieldsUi":{"fieldValues":[{"fieldId":6828,"fieldValue":"Verification"}]}},"type":"n8n-nodes-base.baserow","typeVersion":1,"position":[2192,-240],"id":"51f3377e-317e-4306-9c6f-89afbe806083","name":"Update a row","credentials":{"baserowApi":{"id":"SAkHE4LXFLDlBctH","name":"Baserow account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"59317406-a2eb-47db-9b48-6b00ce2c35bc","leftValue":"={{ $json.Nombre.toNumber() }}","rightValue":1,"operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1856,-256],"id":"648f0a94-7b2c-4d58-a5db-ba6c1ec42ef0","name":"If"}],"connections":{"Webhook":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"Ollama Chat Model":{"ai_languageModel":[[]]},"Groq Chat Model":{"ai_languageModel":[[{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Clean and Parse LLM Response","type":"main","index":0}]]},"Clean and Parse LLM Response":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"HTML","type":"main","index":0}]]},"HTML":{"main":[[{"node":"Convert to File3","type":"main","index":0}]]},"Convert to File3":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"update devis status and pdf","type":"main","index":0}]]},"update devis status and pdf":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[],[{"node":"Update a row","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"ca0cd0a2-ca87-4701-b31e-3b898d9e64ef","triggerCount":1,"shared":[{"createdAt":"2025-06-30T14:57:44.097Z","updatedAt":"2025-06-30T14:57:44.097Z","role":"workflow:owner","workflowId":"hFPa3X6amwb8rPjX","projectId":"t78m7QTVO4mkjY0H"}],"tags":[{"createdAt":"2025-06-18T10:48:40.447Z","updatedAt":"2025-06-18T10:48:40.447Z","id":"4SxpaN7xOfwanCGp","name":"en cours"}]}